services:
  wordpress:
    build: .
    # For production, use: image: ghcr.io/your-username/your-project:latest
    container_name: ${PROJECT_NAME:-wp-headless}
    restart: unless-stopped
    environment:
      # Database Configuration
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      
      # WordPress Configuration for Headless API
      WORDPRESS_CONFIG_EXTRA: |
        /* Azure MySQL SSL Configuration */
        define('MYSQL_SSL_CA', '/var/www/html/DigiCertGlobalRootCA.crt.pem');
        define('MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL);
        
        /* API Optimization */
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('SCRIPT_DEBUG', false);
        
        /* Performance Configuration */
        define('WP_POST_REVISIONS', 3);
        define('AUTOSAVE_INTERVAL', 300);
        define('WP_CRON_LOCK_TIMEOUT', 60);
        define('AUTOMATIC_UPDATER_DISABLED', true);
        
        /* Security */
        define('DISALLOW_FILE_EDIT', true);
        define('FORCE_SSL_ADMIN', false); // Set to true for HTTPS admin
        
        /* File Upload Configuration */
        ini_set('upload_max_filesize', '128M');
        ini_set('post_max_size', '128M');
        ini_set('max_execution_time', 300);
        ini_set('memory_limit', '512M');
        
        /* API-specific configurations */
        define('JWT_AUTH_SECRET_KEY', '${JWT_SECRET_KEY:-your-secret-key-here}');
        define('JWT_AUTH_CORS_ENABLE', true);
    
    volumes:
      # WordPress content (themes, plugins, uploads)
      - ./wp-content:/var/www/html/wp-content
      # Configuration files
      - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      # Must-use plugins
      - ./wp-content/mu-plugins:/var/www/html/wp-content/mu-plugins
      # Custom plugins
      - ./wp-content/plugins:/var/www/html/wp-content/plugins
    
    networks:
      - wp-network
    
    ports:
      - "${WP_PORT:-8081}:80"  # Development port
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/wp-admin/admin-ajax.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    # Development tools (uncomment for debugging)
    # environment:
    #   - XDEBUG_MODE=debug
    #   - XDEBUG_START_WITH_REQUEST=yes

  # Optional: Local MySQL for development (uncomment to use)
  # mysql:
  #   image: mysql:8.0
  #   container_name: ${PROJECT_NAME:-wp-headless}-mysql
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_DATABASE: ${DB_NAME:-wordpress}
  #     MYSQL_USER: ${DB_USER:-wpuser}
  #     MYSQL_PASSWORD: ${DB_PASSWORD:-password}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
  #   ports:
  #     - "${MYSQL_PORT:-3307}:3306"
  #   networks:
  #     - wp-network
  #   profiles:
  #     - local

  # Optional: phpMyAdmin for database management
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: ${PROJECT_NAME:-wp-headless}-phpmyadmin
  #   restart: unless-stopped
  #   ports:
  #     - "${PMA_PORT:-8091}:80"
  #   environment:
  #     PMA_HOST: mysql
  #     PMA_USER: ${DB_USER:-wpuser}
  #     PMA_PASSWORD: ${DB_PASSWORD:-password}
  #   depends_on:
  #     - mysql
  #   networks:
  #     - wp-network
  #   profiles:
  #     - local

volumes:
  mysql_data:

networks:
  wp-network:
    driver: bridge
